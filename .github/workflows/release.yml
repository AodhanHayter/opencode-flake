name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Extract version from tag
        id: get-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Version: $VERSION"

      - name: Verify flake builds
        run: |
          nix build --print-build-logs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: OpenCode Flake ${{ steps.get-version.outputs.version }}
          body: |
            OpenCode Flake version ${{ steps.get-version.outputs.version }}
            
            This release packages [OpenCode](https://github.com/sst/opencode) v${{ steps.get-version.outputs.version }} as a Nix flake.
            
            ## Installation
            
            ```bash
            # Add this flake to your flake registry
            nix registry add opencode github:aodhanhayter/opencode-flake
            
            # Run OpenCode
            nix run opencode
            
            # Or install to your profile
            nix profile install github:aodhanhayter/opencode-flake
            ```
            
            ## Using in a flake
            
            ```nix
            {
              inputs.opencode-flake.url = "github:aodhanhayter/opencode-flake";
              
              outputs = { self, nixpkgs, opencode-flake, ... }: {
                # Use in your outputs
                packages.x86_64-linux.opencode = opencode-flake.packages.x86_64-linux.default;
              };
            }
            ```
          draft: false
          prerelease: false