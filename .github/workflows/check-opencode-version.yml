name: Check OpenCode Version

on:
  schedule:
    # Run every day at 3:00 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  check-version:
    name: Check for new OpenCode version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check-version.outputs.new_version }}
      current_version: ${{ steps.check-version.outputs.current_version }}
      update_needed: ${{ steps.check-version.outputs.update_needed }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install -g semver

      - name: Check for new version
        id: check-version
        run: |
          # Extract current version from flake.nix
          CURRENT_VERSION=$(grep -A 3 "version = " flake.nix | grep -o '"[0-9]\+\.[0-9]\+\.[0-9]\+"' | head -1 | tr -d '"')
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
          
          # Get latest version from npm registry
          LATEST_VERSION=$(npm view opencode-ai version)
          echo "Latest version: $LATEST_VERSION"
          echo "new_version=$LATEST_VERSION" >> "$GITHUB_OUTPUT"
          
          # Compare versions
          if [ "$(semver compare $LATEST_VERSION $CURRENT_VERSION)" -gt 0 ]; then
            echo "Update needed: Yes (version $CURRENT_VERSION -> $LATEST_VERSION)"
            echo "update_needed=true" >> "$GITHUB_OUTPUT"
          else
            echo "Update needed: No (already at latest version $CURRENT_VERSION)"
            echo "update_needed=false" >> "$GITHUB_OUTPUT"
          fi

  update-version:
    name: Update OpenCode version
    needs: check-version
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.update_needed == 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Update version
        run: |
          NEW_VERSION="${{ needs.check-version.outputs.new_version }}"
          echo "Updating to version $NEW_VERSION"
          chmod +x ./update-version.sh
          ./update-version.sh "$NEW_VERSION"
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Update OpenCode flake to version ${{ needs.check-version.outputs.new_version }}"
          title: "Update OpenCode flake to version ${{ needs.check-version.outputs.new_version }}"
          body: |
            This PR updates the OpenCode flake from version ${{ needs.check-version.outputs.current_version }} to ${{ needs.check-version.outputs.new_version }}.
            
            * Updates version in flake.nix
            * Updates package hashes in package.nix
            
            This PR was automatically generated by the check-opencode-version workflow.
          branch: update-opencode-${{ needs.check-version.outputs.new_version }}
          delete-branch: true